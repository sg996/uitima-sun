{"version":3,"file":"js/games.3f88d655.js","mappings":"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","sources":["webpack://uitima-sun/./src/views/games/001/[games001].vue","webpack://uitima-sun/./src/views/games/001/[games001].vue?98fc","webpack://uitima-sun/../../../packages/components/tag/src/tag.ts","webpack://uitima-sun/../../../packages/components/tag/src/tag.vue","webpack://uitima-sun/../../../packages/components/tag/index.ts","webpack://uitima-sun/./node_modules/nanoid/index.browser.js","webpack://uitima-sun/./src/views/games/index.vue","webpack://uitima-sun/./src/views/games/index.vue?0b64","webpack://uitima-sun/../../../packages/constants/size.ts","webpack://uitima-sun/../../../packages/hooks/use-prop/index.ts","webpack://uitima-sun/../../../packages/hooks/use-common-props/index.ts"],"sourcesContent":["export function render(_ctx, _cache) {\n  return \"001\";\n}","/* unplugin-vue-components disabled */import { render } from \"./[games001].vue?vue&type=template&id=4e78c830\"\nconst script = {}\n\nimport exportComponent from \"E:\\\\DailyPractice\\\\vue\\\\uitima-sun\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { buildProps } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport type Tag from './tag.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const tagProps = buildProps({\n  closable: Boolean,\n  type: {\n    type: String,\n    values: ['success', 'info', 'warning', 'danger', ''],\n    default: '',\n  },\n  hit: Boolean,\n  disableTransitions: Boolean,\n  color: {\n    type: String,\n    default: '',\n  },\n  size: {\n    type: String,\n    values: componentSizes,\n    default: '',\n  },\n  effect: {\n    type: String,\n    values: ['dark', 'light', 'plain'],\n    default: 'light',\n  },\n  round: Boolean,\n} as const)\nexport type TagProps = ExtractPropTypes<typeof tagProps>\n\nexport const tagEmits = {\n  close: (evt: MouseEvent) => evt instanceof MouseEvent,\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\nexport type TagEmits = typeof tagEmits\n\nexport type TagInstance = InstanceType<typeof Tag>\n","<template>\n  <span\n    v-if=\"disableTransitions\"\n    :class=\"classes\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot />\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n      <Close />\n    </el-icon>\n  </span>\n  <transition v-else :name=\"`${ns.namespace.value}-zoom-in-center`\" appear>\n    <span\n      :class=\"classes\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot />\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n        <Close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport { tagEmits, tagProps } from './tag'\n\ndefineOptions({\n  name: 'ElTag',\n})\nconst props = defineProps(tagProps)\nconst emit = defineEmits(tagEmits)\n\nconst tagSize = useSize()\nconst ns = useNamespace('tag')\nconst classes = computed(() => {\n  const { type, hit, effect, closable, round } = props\n  return [\n    ns.b(),\n    ns.is('closable', closable),\n    ns.m(type),\n    ns.m(tagSize.value),\n    ns.m(effect),\n    ns.is('hit', hit),\n    ns.is('round', round),\n  ]\n})\n\n// methods\nconst handleClose = (event: MouseEvent) => {\n  emit('close', event)\n}\n\nconst handleClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n</script>\n","import { withInstall } from '@element-plus/utils'\n\nimport Tag from './src/tag.vue'\n\nexport const ElTag = withInstall(Tag)\nexport default ElTag\n\nexport * from './src/tag'\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c50414fe\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"game-content group grid md:grid-cols-2 lg:grid-cols-3 gap-4 min-w-min\"\n};\nconst _hoisted_2 = [\"onClick\"];\nimport { reactive } from 'vue';\nimport { nanoid } from 'nanoid';\nexport default {\n  __name: 'index',\n\n  setup(__props) {\n    const menuList = reactive([{\n      id: nanoid(),\n      name: 'Tic Tac Toe',\n      path: '/games/001',\n      label: '001'\n    }, {\n      id: nanoid(),\n      name: 'Tic Tac Toe',\n      path: '',\n      label: '002'\n    }]);\n    return (_ctx, _cache) => {\n      const _component_el_tag = _resolveComponent(\"el-tag\");\n\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(menuList, item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"cell relative\",\n          onClick: $event => _ctx.$router.push(item.path)\n        }, [_createTextVNode(_toDisplayString(item.name) + \" \", 1), _createVNode(_component_el_tag, {\n          class: \"absolute top-0 left-0\",\n          effect: \"light\",\n          \"disable-transitions\": \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(item.label), 1)]),\n          _: 2\n        }, 1024)], 8, _hoisted_2);\n      }), 128))]);\n    };\n  }\n\n};","/* unplugin-vue-components disabled */import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=c50414fe&lang=scss&scoped=true\"\n\nimport exportComponent from \"E:\\\\DailyPractice\\\\vue\\\\uitima-sun\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c50414fe\"]])\n\nexport default __exports__","export const componentSizes = ['', 'default', 'small', 'large'] as const\n\nexport type ComponentSize = typeof componentSizes[number]\n\nexport const componentSizeMap = {\n  large: 40,\n  default: 32,\n  small: 24,\n} as const\n","import { computed, getCurrentInstance } from 'vue'\nimport type { ComputedRef } from 'vue'\n\nexport const useProp = <T>(name: string): ComputedRef<T | undefined> => {\n  const vm = getCurrentInstance()!\n  return computed(() => (vm.proxy?.$props as any)[name] ?? undefined)\n}\n","import { computed, inject, ref, unref } from 'vue'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { buildProp } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport { useProp } from '../use-prop'\nimport { useGlobalConfig } from '../use-global-config'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { MaybeRef } from '@vueuse/core'\n\nexport const useSizeProp = buildProp({\n  type: String,\n  values: componentSizes,\n  required: false,\n} as const)\n\nexport const useSize = (\n  fallback?: MaybeRef<ComponentSize | undefined>,\n  ignore: Partial<Record<'prop' | 'form' | 'formItem' | 'global', boolean>> = {}\n) => {\n  const emptyRef = ref(undefined)\n\n  const size = ignore.prop ? emptyRef : useProp<ComponentSize>('size')\n  const globalConfig = ignore.global ? emptyRef : useGlobalConfig('size')\n  const form = ignore.form\n    ? { size: undefined }\n    : inject(formContextKey, undefined)\n  const formItem = ignore.formItem\n    ? { size: undefined }\n    : inject(formItemContextKey, undefined)\n\n  return computed(\n    (): ComponentSize =>\n      size.value ||\n      unref(fallback) ||\n      formItem?.size ||\n      form?.size ||\n      globalConfig.value ||\n      ''\n  )\n}\n\nexport const useDisabled = (fallback?: MaybeRef<boolean | undefined>) => {\n  const disabled = useProp<boolean>('disabled')\n  const form = inject(formContextKey, undefined)\n  return computed(\n    () => disabled.value || unref(fallback) || form?.disabled || false\n  )\n}\n"],"names":["render","_ctx","_cache","script","__exports__","tagProps","buildProps","closable","Boolean","type","String","values","default","hit","disableTransitions","color","size","componentSizes","effect","round","tagEmits","close","evt","MouseEvent","click","tagSize","ns","classes","handleClose","emit","handleClick","ElTag","withInstall","Tag","nanoid","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","_hoisted_1","class","_hoisted_2","__name","setup","__props","menuList","name","path","label","_component_el_tag","item","key","onClick","$event","$router","push","_","useProp","vm","getCurrentInstance","computed","_a","_b","proxy","$props","useSizeProp","buildProp","required","useSize","fallback","ignore","emptyRef","ref","prop","globalConfig","global","useGlobalConfig","form","inject","formContextKey","formItem","formItemContextKey","value","unref","useDisabled","disabled"],"sourceRoot":""}